apply plugin: 'java'
apply plugin: 'java-library'
apply plugin: 'idea'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'
apply plugin: 'war'

def ver = [
        java: '1.8',
        web: '3.1',
        spring: '5.1.2.RELEASE',
        slf4j: '1.7.12',
        jackson: '2.8.8',
        junit: '4.9',
        logback: '1.1.7',
        dbcp: '2.2.0',
        codec: '1.11',
        nimbus: '7.0.1',
        gson: '2.8.5',
        commonsio: '2.6',
        httpclient: '4.5.6',
        mybatisSpring: '2.0.0',
        mybatis: '3.5.0',
        jackson: '1.9.13',
        json: '20180813',
        mysql: '8.0.16',
        twitter4j: '4.0.2',
        http: '20070405',
        guava: '27.1-jre',
        jstl: '1.2',
        poi: '4.1.0',
        fileupload: '1.4',
        googleHttpClient: '1.29.0',
        googleHttpClientJackson2: '1.29.0',
        mariadb: '2.0.3',
        tomcat: '9.0.14',
        yaml: '1.1',
        lombok: '1.18.8',
        commonlang: '3.9',
        aspectjrt : '1.9.4',
        text: '1.8',
        jbcrypt : '0.3m',
        commonsLang3 : '3.9',
        jjwt : '0.9.0',
        jbcrypt : '0.3m',
        mssql : '8.4.0.jre8'
]

def cnf = [
        outName: 'scp',
        outVer: '1.0.0',
        main: 'kr.co.ScpApplication'
]

bootWar.enabled = true
war.enabled = false

description = 'Service Control Platform'

buildscript {
    ext {
        springBootVersion = '2.1.2.RELEASE'
    }
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:2.1.2.RELEASE")
    }
}


tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

sourceSets.main.resources {
    srcDirs = ['src/main/java','src/main/resources']
    include '**/*.yml'
    include '**/*.xml'
    include '**/*.txt'
    include '**/*.properties'

    include '**/*.html'
    include '**/*.css'
    include '**/*.png'
    include '**/*.jpeg'
    include '**/*.jpg'
    include '**/*.js'
    include '**/*.json'
}

war {
    baseName = cnf.outName
    //version = cnf.outVer

}

sourceCompatibility = ver.java
targetCompatibility = ver.java

springBoot {
    mainClassName = cnf.main
}

bootRun {

}

bootWar {
    archiveFileName="${cnf.outName}.war"
}

repositories {
    mavenCentral()
    jcenter()
    maven { url "http://repo.spring.io/libs-snapshot" }
}

configurations {
    all {
        exclude group: 'org.springframework.boot', module: 'spring-boot-starter-logging'
    }
}

dependencies {

    // tomcat embed
    implementation "org.springframework.boot:spring-boot-starter-tomcat"
    compile group: 'org.apache.tomcat.embed', name: 'tomcat-embed-jasper', version: "9.0.14"

    // spring
    implementation 'org.springframework.boot:spring-boot-starter:2.1.2.RELEASE'
    implementation 'org.springframework.boot:spring-boot-starter-security:2.1.2.RELEASE'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-web:2.1.2.RELEASE'
    implementation 'org.springframework.boot:spring-boot-starter-websocket:2.1.2.RELEASE'
    compile group: 'org.springframework.data', name: 'spring-data-redis', version: '2.1.2.RELEASE'

    // log4j2
    compile 'org.springframework.boot:spring-boot-starter-log4j2'
    compile group: 'com.fasterxml.jackson.dataformat', name: 'jackson-dataformat-yaml', version: '2.10.3'

    implementation 'com.github.ulisesbocchio:jasypt-spring-boot-starter:2.1.1'
    implementation 'org.apache.commons:commons-lang3:3.8.1'
    implementation 'org.apache.httpcomponents:httpclient:4.5.6'
    implementation 'org.apache.poi:poi:4.1.0'
    implementation 'org.apache.poi:poi-ooxml:4.1.0'
    implementation 'commons-beanutils:commons-beanutils:1.9.3'
    implementation 'uap-clj:uap-clj:1.3.3'
    implementation 'com.googlecode.json-simple:json-simple:1.1'
    implementation 'com.google.code.gson:gson:2.8.5'

    // junit
    testCompile group: 'junit', name: 'junit', version: '4.12'

    //dbms
    compile group: 'mysql', 			  		name: 'mysql-connector-java', version: "${ver.mysql}"
    compile group: 'com.microsoft.sqlserver',   name: 'mssql-jdbc',           version: "${ver.mssql}"

    compile group: 'org.springframework', 		name: 'spring-jdbc', version: "${ver.spring}"
    compile group: 'org.mybatis', 				name: 'mybatis-spring', version: "${ver.mybatisSpring}"
    compile group: 'org.mybatis', 				name: 'mybatis', version: "${ver.mybatis}"

    //util
    compile 'io.jsonwebtoken:jjwt:0.9.1'
    compile group: 'org.bgee.log4jdbc-log4j2', name: 'log4jdbc-log4j2-jdbc4.1', version: '1.16'
    compile group: 'commons-io', name: 'commons-io', version: '2.4'
    compile group: 'com.jayway.jsonpath', name: 'json-path', version: '2.4.0'


    compile group: 'commons-codec', name: 'commons-codec', version: '1.14' //kpm
    compile group: 'org.apache.commons', name: 'commons-math3', version: '3.6.1' //kpm

    //redis
    compile group: 'io.lettuce', name: 'lettuce-core', version: '5.3.2.RELEASE'

    //lombok
    compileOnly("org.projectlombok:lombok:${ver.lombok}")
    testCompileOnly("org.projectlombok:lombok:${ver.lombok}")
    annotationProcessor("org.projectlombok:lombok:${ver.lombok}")
    testAnnotationProcessor("org.projectlombok:lombok:${ver.lombok}")

    //etc
    compile files('lib/ojdbc6-11.2.0.3.jar')
    compile files('lib/unirest-java-3.7.03.jar')

    //etc-KPM
//    compile files('lib/ProtocolParser.jar')
//    compile files('lib/ProtocolParser-1.0.1.jar')
    compile files('lib/ProtocolParser-1.0.4.jar')

}
